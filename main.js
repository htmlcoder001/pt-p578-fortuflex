(()=>{var t={852:t=>{"use strict";t.exports="class DateTime {\n  constructor(t) {\n    (this.element = t), (this.attributes = { ...this.extractDataAttributes() });\n  }\n\n  static defaults() {\n    return { options: {}, type: '', locale: 'pt' };\n  }\n\n  setTextDate() {\n    const t = this.getDate();\n    const { options: e, type: a, locale: s } = this.attributes;\n    this.element.textContent = t[`toLocale${a}String`](s, e);\n  }\n\n  getDate() {\n    const t = new Date();\n    const e = this.attributes.difference;\n    return t.setDate(t.getDate() + e), t;\n  }\n\n  getOptions() {\n    const t = this.element.getAttribute('data-options');\n    if (!t) return DateTime.defaults().options;\n    const e = t.split(',');\n    const a = {};\n    return (\n      e.forEach((t) => {\n        const e = t.split(':');\n        const s = e[0];\n        const i = e[1] || 'numeric';\n        a[s] = i;\n      }),\n      a\n    );\n  }\n\n  formatType() {\n    let t = this.element.getAttribute('data-type');\n    if (t) return (t = t.toLowerCase()), t.charAt(0).toUpperCase() + t.slice(1);\n  }\n\n  extractDataAttributes() {\n    return {\n      options: this.getOptions(),\n      difference: parseInt(this.element.getAttribute('data-difference'), 10) || 0,\n      type: this.formatType() || DateTime.defaults().type,\n      locale: this.element.getAttribute('data-locale') || DateTime.defaults().locale\n    };\n  }\n}\ndocument.querySelectorAll('.s-date').forEach((t) => {\n  new DateTime(t).setTextDate();\n});\nlet intr;\nlet time = 1800;\nlet count = 0;\nfunction start_timer() {\n  if ((count++, count !== 1)) return !1;\n  (intr = setInterval(tick, 1e3)), count++;\n}\nfunction tick() {\n  time -= 1;\n  const t = Math.floor(time / 60);\n  let n = time - 60 * t;\n  t == 0 && n == 0 && clearInterval(intr), (n = n >= 10 ? n : `0${n}`), (document.querySelector('#min').innerHTML = `${t}`), (document.querySelector('#sec').innerHTML = n);\n}\nsetInterval(function () {\n  start_timer();\n}, 100);\n"},802:t=>{"use strict";t.exports="function dtime_nums(d, like_eu) {\n  var now = new Date();\n  now.setDate(now.getDate() + d + 1);\n  var dayNum = '';\n  if (now.getDate() < 10) {\n    dayNum = '0';\n  }\n  dayNum += now.getDate();\n  var monthNum = '';\n  if (now.getMonth() + 1 < 10) {\n    monthNum = '0';\n  }\n  monthNum += now.getMonth() + 1;\n  if (like_eu === true) {\n    return dayNum + '.' + monthNum + '.' + now.getFullYear();\n  }\n  return monthNum + '.' + dayNum + '.' + now.getFullYear();\n}\n"}},n={};function e(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={exports:{}};return t[r](o,o.exports,e),o.exports}eval.call(null,e(802)),$((function(){eval.call(null,e(852))}))})();